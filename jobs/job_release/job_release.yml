# Job from R2Devops hub --> r2devops.io

stages:
  - deploy

job_release:
  stage: deploy
  image:
    name: alpine/httpie:${IMAGE_TAG}
    entrypoint: [""]
  variables:
    JOBS_DIRECTORY: "."
    IMAGE_TAG: "3.2.1"
    GITLAB_API_URL: "${CI_SERVER_HOST}"
    CHANGELOG_FILE: "CHANGELOG.md"
  before_script:
    - apk update && apk add --no-cache bash
  script:
    # Url encode the project name
    - PROJECT_ENCODED=$(/bin/bash -c "$(http --ignore-stdin --body https://gitlab.com/r2devops/hub/-/snippets/2462394/raw/92c7e820e5b7ce468d8031748e1a57c24c67f6a4/_encode.sh) && _encode '$CI_PROJECT_PATH'")
    # Search for all changelog files
    - JOBS="$(find $JOBS_DIRECTORY -iname $CHANGELOG_FILE)"
    - for JOB in $JOBS; do
        # Extract the job name (this is the folder name)
    -   JOB_NAME=$(basename $(dirname $JOB))
        # Retrieve all versions of the job inside the CHANGELOG file, ## [(0.2.0)] - 2021-04-20 => get only this part ()
    -   VERSIONS=$(sed -rn 's/^##\s*\[\s*([^\ ]*)\s*\]\s*-\s*[0-9]{4}-[0-9]{2}-[0-9]{2}\s*/\1/p' ${JOB})
    -   for VERSION in ${VERSIONS}; do
          #Retrieve the changes between two versions
    -     CHANGELOG=$(sed -n "/^##\s*\[\s*${VERSION}\s*\]/,/^##/p" $JOB | sed -e '/^$/d' | head -n -1 | tail -n +2)
          #For initial version, we don't have a previous version, so set to default message
    - |
          [ -z "${CHANGELOG}" ] && CHANGELOG=$(sed -n "/^##\s*\[\s*$VERSION\s*\]/,/^[^##]/p" $JOB | sed -e '/^$/d' | tail -n +2)
          result=$(http --ignore-stdin POST https://${GITLAB_API_URL}/api/v4/projects/$PROJECT_ENCODED/releases \
            "JOB-TOKEN: ${CI_JOB_TOKEN}" \
            tag_name=${JOB_NAME}-${VERSION} \
            ref=${CI_COMMIT_SHA} \
            "description=${CHANGELOG}")
    -       if [ $(echo $result | grep "Release already exists\|${JOB_NAME}-${VERSION}" | wc -l) -eq 0 ]; then
    -         echo "[ERROR] Problem when attempting to create release ${JOB_NAME}-${VERSION}"
    -         echo "[ERROR] ${result}"
    -         exit 1;
    -       else
    -         if [ $(echo ${result} | grep "Release already exists" | wc -l) -eq 0 ]; then
    -           echo "New version detected for $JOB_NAME-$VERSION"
    -         fi
    - |
            echo "Processed ${JOB_NAME}-${VERSION} : ${result}"
    -       fi
    -   done
    - done
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
